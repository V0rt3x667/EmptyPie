diff --git a/frontend/drivers/platform_unix.c b/frontend/drivers/platform_unix.c
index 4f30d6db69d..97d3304f4f3 100644
--- a/frontend/drivers/platform_unix.c
+++ b/frontend/drivers/platform_unix.c
@@ -1888,12 +1888,6 @@ static void frontend_unix_get_env(int *argc,
          "thumbnails", sizeof(g_defaults.dirs[DEFAULT_DIR_THUMBNAILS]));
    fill_pathname_join(g_defaults.dirs[DEFAULT_DIR_LOGS], base_path,
          "logs", sizeof(g_defaults.dirs[DEFAULT_DIR_LOGS]));
-   fill_pathname_join(g_defaults.dirs[DEFAULT_DIR_SRAM], base_path,
-         "saves", sizeof(g_defaults.dirs[DEFAULT_DIR_SRAM]));
-   fill_pathname_join(g_defaults.dirs[DEFAULT_DIR_SAVESTATE], base_path,
-         "states", sizeof(g_defaults.dirs[DEFAULT_DIR_SAVESTATE]));
-   fill_pathname_join(g_defaults.dirs[DEFAULT_DIR_SYSTEM], base_path,
-         "system", sizeof(g_defaults.dirs[DEFAULT_DIR_SYSTEM]));
 #endif

 #ifndef IS_SALAMANDER

diff --git a/configuration.c b/configuration.c
index 989fa64bfab..218a7ace173 100644
--- a/configuration.c
+++ b/configuration.c
@@ -1584,6 +1584,7 @@ static struct config_path_setting *populate_settings_path(
    SETTING_PATH("audio_dsp_plugin",              settings->paths.path_audio_dsp_plugin, false, NULL, true);
    SETTING_PATH("audio_filter_dir",              settings->paths.directory_audio_filter, true, NULL, true);
    SETTING_PATH("video_shader_dir",              settings->paths.directory_video_shader, true, NULL, true);
+   SETTING_PATH("video_shader",                  settings->paths.path_shader, false, NULL, true);
    SETTING_PATH("video_filter_dir",              settings->paths.directory_video_filter, true, NULL, true);
    SETTING_PATH("video_filter",                  settings->paths.path_softfilter_plugin, false, NULL, true);
    SETTING_PATH("video_font_path",               settings->paths.path_font, false, NULL, true);
@@ -2962,6 +2963,7 @@ void config_set_defaults(void *data)
    *settings->paths.directory_menu_config = '\0';
 #endif
    *settings->paths.directory_video_shader = '\0';
+   *settings->paths.path_shader            = '\0';
    *settings->paths.directory_video_filter = '\0';
    *settings->paths.directory_audio_filter = '\0';

@@ -5180,6 +5182,10 @@ bool config_save_file(const char *path)
    {
       for (i = 0; i < (unsigned)path_settings_size; i++)
       {
+         /* blacklist the 'video_shader' configuration path, better handled by shader presets */
+         if (string_is_equal(path_settings[i].ident, "video_shader"))
+             continue;
+
          const char *value = path_settings[i].ptr;

          if (path_settings[i].def_enable && string_is_empty(path_settings[i].ptr))

diff --git a/configuration.h b/configuration.h
index 71d194f8288..902c60d10a1 100644
--- a/configuration.h
+++ b/configuration.h
@@ -543,6 +543,7 @@ typedef struct settings
       char path_cheat_settings[PATH_MAX_LENGTH];
       char path_font[PATH_MAX_LENGTH];
       char path_rgui_theme_preset[PATH_MAX_LENGTH];
+      char path_shader[PATH_MAX_LENGTH];

       char directory_audio_filter[PATH_MAX_LENGTH];
       char directory_autoconfig[PATH_MAX_LENGTH];

diff --git a/gfx/video_shader_parse.c b/gfx/video_shader_parse.c
index 744cc24ce0c..9056464b53b 100644
--- a/gfx/video_shader_parse.c
+++ b/gfx/video_shader_parse.c
@@ -2782,9 +2782,10 @@ static bool video_shader_load_shader_preset_internal(
       {
          if (string_is_empty(special_name))
             break;
-
-         fill_pathname_join(s, shader_directory, special_name, len);
-         strlcat(s, video_shader_get_preset_extension(types[i]), len);
+         if (strcmp(special_name, "config")!=0) {
+            fill_pathname_join(s, shader_directory, special_name, len);
+            strlcat(s, video_shader_get_preset_extension(types[i]), len);
+         }
       }

       if (path_is_valid(s))
@@ -2890,6 +2891,17 @@ static bool video_shader_load_auto_shader_preset(settings_t *settings, const cha
                "global"))
          goto success;
    }
+   /* Configuration file shader found ? */
+   strlcpy(shader_path, settings->paths.path_shader, PATH_MAX_LENGTH);
+   if (!string_is_empty(shader_path)) {
+      RARCH_LOG("[Shaders/EmptyPie]: Configuration file shader path found.\n");
+      if(video_shader_load_shader_preset_internal(
+            shader_path,
+            sizeof(shader_path),
+            NULL, NULL,
+            "config"))
+         goto success;
+   }
    return false;

 success:
